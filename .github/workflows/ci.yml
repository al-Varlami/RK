name: CI/CD Pipeline

on:
  push:
    branches: [main]
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache
            build
          key: ${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt') }}

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            g++ \
            build-essential \
            libgtest-dev

      - name: Build and test
        run: |
          mkdir -p build && cd build
          cmake -DBUILD_TESTING=ON ..
          make -j$(nproc)
          ctest --output-on-failure

      - name: Package
        run: |
          mkdir -p pkg/usr/local/bin
          install -m 755 build/Behavioral/Observer/observer_demo pkg/usr/local/bin/
          
          mkdir -p pkg/DEBIAN
          cat <<EOF > pkg/DEBIAN/control
          Package: observer-pattern
          Version: 1.0-$(date +%Y%m%d%H%M)
          Section: utils
          Priority: optional
          Architecture: amd64
          Maintainer: CI <ci@example.com>
          Description: Observer Pattern Implementation
          Depends: libc6
          EOF
          
          dpkg-deb --build pkg
          mkdir -p artifacts
          mv pkg.deb artifacts/observer-pattern.deb

      - name: Upload artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: deb-package
          path: artifacts/observer-pattern.deb
          retention-days: 3

  release:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: deb-package

      - uses: softprops/action-gh-release@v2
        with:
          files: observer-pattern.deb
          body: |
            Automated build from ${{ github.sha }}
            Build date: $(date -u +'%Y-%m-%d %H:%M:%S UTC')